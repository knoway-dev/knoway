// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: filters/v1alpha1/rate_limit.proto

package v1alpha1

import (
	reflect "reflect"
	sync "sync"

	duration "github.com/golang/protobuf/ptypes/duration"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RateLimitBaseOn int32

const (
	RateLimitBaseOn_RATE_LIMIT_BASE_ON_UNSPECIFIED RateLimitBaseOn = 0
	RateLimitBaseOn_USER_ID                        RateLimitBaseOn = 1
	RateLimitBaseOn_API_KEY                        RateLimitBaseOn = 2
)

// Enum value maps for RateLimitBaseOn.
var (
	RateLimitBaseOn_name = map[int32]string{
		0: "RATE_LIMIT_BASE_ON_UNSPECIFIED",
		1: "USER_ID",
		2: "API_KEY",
	}
	RateLimitBaseOn_value = map[string]int32{
		"RATE_LIMIT_BASE_ON_UNSPECIFIED": 0,
		"USER_ID":                        1,
		"API_KEY":                        2,
	}
)

func (x RateLimitBaseOn) Enum() *RateLimitBaseOn {
	p := new(RateLimitBaseOn)
	*p = x
	return p
}

func (x RateLimitBaseOn) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateLimitBaseOn) Descriptor() protoreflect.EnumDescriptor {
	return file_filters_v1alpha1_rate_limit_proto_enumTypes[0].Descriptor()
}

func (RateLimitBaseOn) Type() protoreflect.EnumType {
	return &file_filters_v1alpha1_rate_limit_proto_enumTypes[0]
}

func (x RateLimitBaseOn) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateLimitBaseOn.Descriptor instead.
func (RateLimitBaseOn) EnumDescriptor() ([]byte, []int) {
	return file_filters_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{0}
}

type RateLimitMode int32

const (
	RateLimitMode_RATE_LIMIT_MODEL_UNSPECIFIED RateLimitMode = 0
	RateLimitMode_LOCAL                        RateLimitMode = 1
	RateLimitMode_REDIS                        RateLimitMode = 2
)

// Enum value maps for RateLimitMode.
var (
	RateLimitMode_name = map[int32]string{
		0: "RATE_LIMIT_MODEL_UNSPECIFIED",
		1: "LOCAL",
		2: "REDIS",
	}
	RateLimitMode_value = map[string]int32{
		"RATE_LIMIT_MODEL_UNSPECIFIED": 0,
		"LOCAL":                        1,
		"REDIS":                        2,
	}
)

func (x RateLimitMode) Enum() *RateLimitMode {
	p := new(RateLimitMode)
	*p = x
	return p
}

func (x RateLimitMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateLimitMode) Descriptor() protoreflect.EnumDescriptor {
	return file_filters_v1alpha1_rate_limit_proto_enumTypes[1].Descriptor()
}

func (RateLimitMode) Type() protoreflect.EnumType {
	return &file_filters_v1alpha1_rate_limit_proto_enumTypes[1]
}

func (x RateLimitMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateLimitMode.Descriptor instead.
func (RateLimitMode) EnumDescriptor() ([]byte, []int) {
	return file_filters_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{1}
}

type StringMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Match:
	//
	//	*StringMatch_Exact
	//	*StringMatch_Prefix
	Match isStringMatch_Match `protobuf_oneof:"match"`
}

func (x *StringMatch) Reset() {
	*x = StringMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_v1alpha1_rate_limit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMatch) ProtoMessage() {}

func (x *StringMatch) ProtoReflect() protoreflect.Message {
	mi := &file_filters_v1alpha1_rate_limit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMatch.ProtoReflect.Descriptor instead.
func (*StringMatch) Descriptor() ([]byte, []int) {
	return file_filters_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{0}
}

func (m *StringMatch) GetMatch() isStringMatch_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (x *StringMatch) GetExact() string {
	if x, ok := x.GetMatch().(*StringMatch_Exact); ok {
		return x.Exact
	}
	return ""
}

func (x *StringMatch) GetPrefix() string {
	if x, ok := x.GetMatch().(*StringMatch_Prefix); ok {
		return x.Prefix
	}
	return ""
}

type isStringMatch_Match interface {
	isStringMatch_Match()
}

type StringMatch_Exact struct {
	Exact string `protobuf:"bytes,1,opt,name=exact,proto3,oneof"`
}

type StringMatch_Prefix struct {
	Prefix string `protobuf:"bytes,2,opt,name=prefix,proto3,oneof"`
}

func (*StringMatch_Exact) isStringMatch_Match() {}

func (*StringMatch_Prefix) isStringMatch_Match() {}

type RateLimitPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match    *StringMatch       `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	Limit    int32              `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	BasedOn  RateLimitBaseOn    `protobuf:"varint,3,opt,name=based_on,json=basedOn,proto3,enum=knoway.filters.v1alpha1.RateLimitBaseOn" json:"based_on,omitempty"`
	Duration *duration.Duration `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *RateLimitPolicy) Reset() {
	*x = RateLimitPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_v1alpha1_rate_limit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimitPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitPolicy) ProtoMessage() {}

func (x *RateLimitPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_filters_v1alpha1_rate_limit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitPolicy.ProtoReflect.Descriptor instead.
func (*RateLimitPolicy) Descriptor() ([]byte, []int) {
	return file_filters_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{1}
}

func (x *RateLimitPolicy) GetMatch() *StringMatch {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *RateLimitPolicy) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RateLimitPolicy) GetBasedOn() RateLimitBaseOn {
	if x != nil {
		return x.BasedOn
	}
	return RateLimitBaseOn_RATE_LIMIT_BASE_ON_UNSPECIFIED
}

func (x *RateLimitPolicy) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

// RateLimitConfig defines rate limiting configuration
type RateLimitConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies     []*RateLimitPolicy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	Model        RateLimitMode      `protobuf:"varint,2,opt,name=model,proto3,enum=knoway.filters.v1alpha1.RateLimitMode" json:"model,omitempty"`
	ServerPrefix string             `protobuf:"bytes,3,opt,name=server_prefix,json=serverPrefix,proto3" json:"server_prefix,omitempty"`
	RedisServer  *RedisServer       `protobuf:"bytes,4,opt,name=redis_server,json=redisServer,proto3" json:"redis_server,omitempty"`
}

func (x *RateLimitConfig) Reset() {
	*x = RateLimitConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_v1alpha1_rate_limit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitConfig) ProtoMessage() {}

func (x *RateLimitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_filters_v1alpha1_rate_limit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitConfig.ProtoReflect.Descriptor instead.
func (*RateLimitConfig) Descriptor() ([]byte, []int) {
	return file_filters_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{2}
}

func (x *RateLimitConfig) GetPolicies() []*RateLimitPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *RateLimitConfig) GetModel() RateLimitMode {
	if x != nil {
		return x.Model
	}
	return RateLimitMode_RATE_LIMIT_MODEL_UNSPECIFIED
}

func (x *RateLimitConfig) GetServerPrefix() string {
	if x != nil {
		return x.ServerPrefix
	}
	return ""
}

func (x *RateLimitConfig) GetRedisServer() *RedisServer {
	if x != nil {
		return x.RedisServer
	}
	return nil
}

type RedisServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *RedisServer) Reset() {
	*x = RedisServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_v1alpha1_rate_limit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisServer) ProtoMessage() {}

func (x *RedisServer) ProtoReflect() protoreflect.Message {
	mi := &file_filters_v1alpha1_rate_limit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisServer.ProtoReflect.Descriptor instead.
func (*RedisServer) Descriptor() ([]byte, []int) {
	return file_filters_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{3}
}

func (x *RedisServer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_filters_v1alpha1_rate_limit_proto protoreflect.FileDescriptor

var file_filters_v1alpha1_rate_limit_proto_rawDesc = []byte{
	0x0a, 0x21, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x12, 0x18,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x07, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x43, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x64,
	0x5f, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6b, 0x6e, 0x6f, 0x77,
	0x61, 0x79, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x4f, 0x6e, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x35, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x83, 0x02, 0x0a, 0x0f, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x6e, 0x6f, 0x77,
	0x61, 0x79, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x3c, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6b,
	0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x65,
	0x64, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x1f, 0x0a, 0x0b, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0x4f, 0x0a, 0x0f, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x6e, 0x12, 0x22, 0x0a,
	0x1e, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x42, 0x41, 0x53, 0x45,
	0x5f, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x2a, 0x47, 0x0a, 0x0d, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x1c,
	0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x44,
	0x49, 0x53, 0x10, 0x02, 0x42, 0x21, 0x5a, 0x1f, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x64,
	0x65, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_filters_v1alpha1_rate_limit_proto_rawDescOnce sync.Once
	file_filters_v1alpha1_rate_limit_proto_rawDescData = file_filters_v1alpha1_rate_limit_proto_rawDesc
)

func file_filters_v1alpha1_rate_limit_proto_rawDescGZIP() []byte {
	file_filters_v1alpha1_rate_limit_proto_rawDescOnce.Do(func() {
		file_filters_v1alpha1_rate_limit_proto_rawDescData = protoimpl.X.CompressGZIP(file_filters_v1alpha1_rate_limit_proto_rawDescData)
	})
	return file_filters_v1alpha1_rate_limit_proto_rawDescData
}

var file_filters_v1alpha1_rate_limit_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_filters_v1alpha1_rate_limit_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_filters_v1alpha1_rate_limit_proto_goTypes = []interface{}{
	(RateLimitBaseOn)(0),      // 0: knoway.filters.v1alpha1.RateLimitBaseOn
	(RateLimitMode)(0),        // 1: knoway.filters.v1alpha1.RateLimitMode
	(*StringMatch)(nil),       // 2: knoway.filters.v1alpha1.StringMatch
	(*RateLimitPolicy)(nil),   // 3: knoway.filters.v1alpha1.RateLimitPolicy
	(*RateLimitConfig)(nil),   // 4: knoway.filters.v1alpha1.RateLimitConfig
	(*RedisServer)(nil),       // 5: knoway.filters.v1alpha1.RedisServer
	(*duration.Duration)(nil), // 6: google.protobuf.Duration
}
var file_filters_v1alpha1_rate_limit_proto_depIdxs = []int32{
	2, // 0: knoway.filters.v1alpha1.RateLimitPolicy.match:type_name -> knoway.filters.v1alpha1.StringMatch
	0, // 1: knoway.filters.v1alpha1.RateLimitPolicy.based_on:type_name -> knoway.filters.v1alpha1.RateLimitBaseOn
	6, // 2: knoway.filters.v1alpha1.RateLimitPolicy.duration:type_name -> google.protobuf.Duration
	3, // 3: knoway.filters.v1alpha1.RateLimitConfig.policies:type_name -> knoway.filters.v1alpha1.RateLimitPolicy
	1, // 4: knoway.filters.v1alpha1.RateLimitConfig.model:type_name -> knoway.filters.v1alpha1.RateLimitMode
	5, // 5: knoway.filters.v1alpha1.RateLimitConfig.redis_server:type_name -> knoway.filters.v1alpha1.RedisServer
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_filters_v1alpha1_rate_limit_proto_init() }
func file_filters_v1alpha1_rate_limit_proto_init() {
	if File_filters_v1alpha1_rate_limit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filters_v1alpha1_rate_limit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filters_v1alpha1_rate_limit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimitPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filters_v1alpha1_rate_limit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimitConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filters_v1alpha1_rate_limit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_filters_v1alpha1_rate_limit_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*StringMatch_Exact)(nil),
		(*StringMatch_Prefix)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filters_v1alpha1_rate_limit_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_filters_v1alpha1_rate_limit_proto_goTypes,
		DependencyIndexes: file_filters_v1alpha1_rate_limit_proto_depIdxs,
		EnumInfos:         file_filters_v1alpha1_rate_limit_proto_enumTypes,
		MessageInfos:      file_filters_v1alpha1_rate_limit_proto_msgTypes,
	}.Build()
	File_filters_v1alpha1_rate_limit_proto = out.File
	file_filters_v1alpha1_rate_limit_proto_rawDesc = nil
	file_filters_v1alpha1_rate_limit_proto_goTypes = nil
	file_filters_v1alpha1_rate_limit_proto_depIdxs = nil
}
