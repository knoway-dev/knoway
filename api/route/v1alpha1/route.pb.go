// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: route/v1alpha1/route.proto

package v1alpha1

import (
	reflect "reflect"
	sync "sync"

	duration "github.com/golang/protobuf/ptypes/duration"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// See also:
// Supported load balancers â€” envoy 1.34.0-dev-e3a97f documentation
// https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancers#arch-overview-load-balancing-types
type LoadBalancePolicy int32

const (
	LoadBalancePolicy_LOAD_BALANCE_POLICY_UNSPECIFIED   LoadBalancePolicy = 0
	LoadBalancePolicy_LOAD_BALANCE_POLICY_ROUND_ROBIN   LoadBalancePolicy = 1
	LoadBalancePolicy_LOAD_BALANCE_POLICY_LEAST_REQUEST LoadBalancePolicy = 2
)

// Enum value maps for LoadBalancePolicy.
var (
	LoadBalancePolicy_name = map[int32]string{
		0: "LOAD_BALANCE_POLICY_UNSPECIFIED",
		1: "LOAD_BALANCE_POLICY_ROUND_ROBIN",
		2: "LOAD_BALANCE_POLICY_LEAST_REQUEST",
	}
	LoadBalancePolicy_value = map[string]int32{
		"LOAD_BALANCE_POLICY_UNSPECIFIED":   0,
		"LOAD_BALANCE_POLICY_ROUND_ROBIN":   1,
		"LOAD_BALANCE_POLICY_LEAST_REQUEST": 2,
	}
)

func (x LoadBalancePolicy) Enum() *LoadBalancePolicy {
	p := new(LoadBalancePolicy)
	*p = x
	return p
}

func (x LoadBalancePolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoadBalancePolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_route_v1alpha1_route_proto_enumTypes[0].Descriptor()
}

func (LoadBalancePolicy) Type() protoreflect.EnumType {
	return &file_route_v1alpha1_route_proto_enumTypes[0]
}

func (x LoadBalancePolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoadBalancePolicy.Descriptor instead.
func (LoadBalancePolicy) EnumDescriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{0}
}

type RateLimitBaseOn int32

const (
	RateLimitBaseOn_User   RateLimitBaseOn = 0
	RateLimitBaseOn_APIKey RateLimitBaseOn = 1
)

// Enum value maps for RateLimitBaseOn.
var (
	RateLimitBaseOn_name = map[int32]string{
		0: "User",
		1: "APIKey",
	}
	RateLimitBaseOn_value = map[string]int32{
		"User":   0,
		"APIKey": 1,
	}
)

func (x RateLimitBaseOn) Enum() *RateLimitBaseOn {
	p := new(RateLimitBaseOn)
	*p = x
	return p
}

func (x RateLimitBaseOn) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateLimitBaseOn) Descriptor() protoreflect.EnumDescriptor {
	return file_route_v1alpha1_route_proto_enumTypes[1].Descriptor()
}

func (RateLimitBaseOn) Type() protoreflect.EnumType {
	return &file_route_v1alpha1_route_proto_enumTypes[1]
}

func (x RateLimitBaseOn) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateLimitBaseOn.Descriptor instead.
func (RateLimitBaseOn) EnumDescriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{1}
}

type RouteFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config *anypb.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *RouteFilter) Reset() {
	*x = RouteFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteFilter) ProtoMessage() {}

func (x *RouteFilter) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteFilter.ProtoReflect.Descriptor instead.
func (*RouteFilter) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{0}
}

func (x *RouteFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RouteFilter) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type StringMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Match:
	//
	//	*StringMatch_Exact
	//	*StringMatch_Prefix
	Match isStringMatch_Match `protobuf_oneof:"match"`
}

func (x *StringMatch) Reset() {
	*x = StringMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMatch) ProtoMessage() {}

func (x *StringMatch) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMatch.ProtoReflect.Descriptor instead.
func (*StringMatch) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{1}
}

func (m *StringMatch) GetMatch() isStringMatch_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (x *StringMatch) GetExact() string {
	if x, ok := x.GetMatch().(*StringMatch_Exact); ok {
		return x.Exact
	}
	return ""
}

func (x *StringMatch) GetPrefix() string {
	if x, ok := x.GetMatch().(*StringMatch_Prefix); ok {
		return x.Prefix
	}
	return ""
}

type isStringMatch_Match interface {
	isStringMatch_Match()
}

type StringMatch_Exact struct {
	Exact string `protobuf:"bytes,1,opt,name=exact,proto3,oneof"`
}

type StringMatch_Prefix struct {
	Prefix string `protobuf:"bytes,2,opt,name=prefix,proto3,oneof"`
}

func (*StringMatch_Exact) isStringMatch_Match() {}

func (*StringMatch_Prefix) isStringMatch_Match() {}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model   *StringMatch `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Message *StringMatch `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{2}
}

func (x *Match) GetModel() *StringMatch {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *Match) GetMessage() *StringMatch {
	if x != nil {
		return x.Message
	}
	return nil
}

type RouteDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Backend   string `protobuf:"bytes,2,opt,name=backend,proto3" json:"backend,omitempty"`
	Weight    *int32 `protobuf:"varint,3,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	Cluster   string `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *RouteDestination) Reset() {
	*x = RouteDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteDestination) ProtoMessage() {}

func (x *RouteDestination) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteDestination.ProtoReflect.Descriptor instead.
func (*RouteDestination) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{3}
}

func (x *RouteDestination) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RouteDestination) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *RouteDestination) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *RouteDestination) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type RouteTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination *RouteDestination `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *RouteTarget) Reset() {
	*x = RouteTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteTarget) ProtoMessage() {}

func (x *RouteTarget) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteTarget.ProtoReflect.Descriptor instead.
func (*RouteTarget) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{4}
}

func (x *RouteTarget) GetDestination() *RouteDestination {
	if x != nil {
		return x.Destination
	}
	return nil
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Matches           []*Match          `protobuf:"bytes,2,rep,name=matches,proto3" json:"matches,omitempty"`
	Filters           []*RouteFilter    `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	LoadBalancePolicy LoadBalancePolicy `protobuf:"varint,4,opt,name=load_balance_policy,json=loadBalancePolicy,proto3,enum=knoway.route.v1alpha1.LoadBalancePolicy" json:"load_balance_policy,omitempty"`
	Targets           []*RouteTarget    `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
	RateLimitPolicy   *RateLimitPolicy  `protobuf:"bytes,6,opt,name=rate_limit_policy,json=rateLimitPolicy,proto3" json:"rate_limit_policy,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{5}
}

func (x *Route) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Route) GetMatches() []*Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *Route) GetFilters() []*RouteFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Route) GetLoadBalancePolicy() LoadBalancePolicy {
	if x != nil {
		return x.LoadBalancePolicy
	}
	return LoadBalancePolicy_LOAD_BALANCE_POLICY_UNSPECIFIED
}

func (x *Route) GetTargets() []*RouteTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *Route) GetRateLimitPolicy() *RateLimitPolicy {
	if x != nil {
		return x.RateLimitPolicy
	}
	return nil
}

type RateLimitAdvanceLimitObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseOn RateLimitBaseOn `protobuf:"varint,1,opt,name=base_on,json=baseOn,proto3,enum=knoway.route.v1alpha1.RateLimitBaseOn" json:"base_on,omitempty"`
	Value  string          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RateLimitAdvanceLimitObject) Reset() {
	*x = RateLimitAdvanceLimitObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimitAdvanceLimitObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitAdvanceLimitObject) ProtoMessage() {}

func (x *RateLimitAdvanceLimitObject) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitAdvanceLimitObject.ProtoReflect.Descriptor instead.
func (*RateLimitAdvanceLimitObject) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{6}
}

func (x *RateLimitAdvanceLimitObject) GetBaseOn() RateLimitBaseOn {
	if x != nil {
		return x.BaseOn
	}
	return RateLimitBaseOn_User
}

func (x *RateLimitAdvanceLimitObject) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RateLimitAdvanceLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects  []*RateLimitAdvanceLimitObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	Limit    int32                          `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Duration *duration.Duration             `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *RateLimitAdvanceLimit) Reset() {
	*x = RateLimitAdvanceLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimitAdvanceLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitAdvanceLimit) ProtoMessage() {}

func (x *RateLimitAdvanceLimit) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitAdvanceLimit.ProtoReflect.Descriptor instead.
func (*RateLimitAdvanceLimit) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{7}
}

func (x *RateLimitAdvanceLimit) GetObjects() []*RateLimitAdvanceLimitObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *RateLimitAdvanceLimit) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RateLimitAdvanceLimit) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type RateLimitPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseOn        RateLimitBaseOn          `protobuf:"varint,1,opt,name=base_on,json=baseOn,proto3,enum=knoway.route.v1alpha1.RateLimitBaseOn" json:"base_on,omitempty"`
	Limit         int32                    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Duration      *duration.Duration       `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	AdvanceLimits []*RateLimitAdvanceLimit `protobuf:"bytes,4,rep,name=advance_limits,json=advanceLimits,proto3" json:"advance_limits,omitempty"`
}

func (x *RateLimitPolicy) Reset() {
	*x = RateLimitPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_v1alpha1_route_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimitPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitPolicy) ProtoMessage() {}

func (x *RateLimitPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_route_v1alpha1_route_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitPolicy.ProtoReflect.Descriptor instead.
func (*RateLimitPolicy) Descriptor() ([]byte, []int) {
	return file_route_v1alpha1_route_proto_rawDescGZIP(), []int{8}
}

func (x *RateLimitPolicy) GetBaseOn() RateLimitBaseOn {
	if x != nil {
		return x.BaseOn
	}
	return RateLimitBaseOn_User
}

func (x *RateLimitPolicy) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RateLimitPolicy) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *RateLimitPolicy) GetAdvanceLimits() []*RateLimitAdvanceLimit {
	if x != nil {
		return x.AdvanceLimits
	}
	return nil
}

var File_route_v1alpha1_route_proto protoreflect.FileDescriptor

var file_route_v1alpha1_route_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6b, 0x6e,
	0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f,
	0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x48, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x42, 0x07, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x7f, 0x0a, 0x05, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x38, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3c, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x58, 0x0a, 0x0b, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xfd, 0x02, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x6e, 0x6f,
	0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x13, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x11,
	0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x3c, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12,
	0x52, 0x0a, 0x11, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x6e, 0x6f,
	0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x0f, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x22, 0x74, 0x0a, 0x1b, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x6e, 0x52, 0x06, 0x62, 0x61, 0x73,
	0x65, 0x4f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x15, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf4,
	0x01, 0x0a, 0x0f, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x6e, 0x52, 0x06, 0x62, 0x61, 0x73,
	0x65, 0x4f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x53, 0x0a, 0x0e, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x61,
	0x79, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x0d, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x2a, 0x84, 0x01, 0x0a, 0x11, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x23, 0x0a, 0x1f, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49,
	0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x23, 0x0a, 0x1f, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45,
	0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x52, 0x4f,
	0x42, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x42, 0x41,
	0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x4c, 0x45, 0x41,
	0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x2a, 0x27, 0x0a, 0x0f,
	0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x10, 0x01, 0x42, 0x1f, 0x5a, 0x1d, 0x6b, 0x6e, 0x6f, 0x77, 0x61, 0x79, 0x2e,
	0x64, 0x65, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_route_v1alpha1_route_proto_rawDescOnce sync.Once
	file_route_v1alpha1_route_proto_rawDescData = file_route_v1alpha1_route_proto_rawDesc
)

func file_route_v1alpha1_route_proto_rawDescGZIP() []byte {
	file_route_v1alpha1_route_proto_rawDescOnce.Do(func() {
		file_route_v1alpha1_route_proto_rawDescData = protoimpl.X.CompressGZIP(file_route_v1alpha1_route_proto_rawDescData)
	})
	return file_route_v1alpha1_route_proto_rawDescData
}

var file_route_v1alpha1_route_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_route_v1alpha1_route_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_route_v1alpha1_route_proto_goTypes = []interface{}{
	(LoadBalancePolicy)(0),              // 0: knoway.route.v1alpha1.LoadBalancePolicy
	(RateLimitBaseOn)(0),                // 1: knoway.route.v1alpha1.RateLimitBaseOn
	(*RouteFilter)(nil),                 // 2: knoway.route.v1alpha1.RouteFilter
	(*StringMatch)(nil),                 // 3: knoway.route.v1alpha1.StringMatch
	(*Match)(nil),                       // 4: knoway.route.v1alpha1.Match
	(*RouteDestination)(nil),            // 5: knoway.route.v1alpha1.RouteDestination
	(*RouteTarget)(nil),                 // 6: knoway.route.v1alpha1.RouteTarget
	(*Route)(nil),                       // 7: knoway.route.v1alpha1.Route
	(*RateLimitAdvanceLimitObject)(nil), // 8: knoway.route.v1alpha1.RateLimitAdvanceLimitObject
	(*RateLimitAdvanceLimit)(nil),       // 9: knoway.route.v1alpha1.RateLimitAdvanceLimit
	(*RateLimitPolicy)(nil),             // 10: knoway.route.v1alpha1.RateLimitPolicy
	(*anypb.Any)(nil),                   // 11: google.protobuf.Any
	(*duration.Duration)(nil),           // 12: google.protobuf.Duration
}
var file_route_v1alpha1_route_proto_depIdxs = []int32{
	11, // 0: knoway.route.v1alpha1.RouteFilter.config:type_name -> google.protobuf.Any
	3,  // 1: knoway.route.v1alpha1.Match.model:type_name -> knoway.route.v1alpha1.StringMatch
	3,  // 2: knoway.route.v1alpha1.Match.message:type_name -> knoway.route.v1alpha1.StringMatch
	5,  // 3: knoway.route.v1alpha1.RouteTarget.destination:type_name -> knoway.route.v1alpha1.RouteDestination
	4,  // 4: knoway.route.v1alpha1.Route.matches:type_name -> knoway.route.v1alpha1.Match
	2,  // 5: knoway.route.v1alpha1.Route.filters:type_name -> knoway.route.v1alpha1.RouteFilter
	0,  // 6: knoway.route.v1alpha1.Route.load_balance_policy:type_name -> knoway.route.v1alpha1.LoadBalancePolicy
	6,  // 7: knoway.route.v1alpha1.Route.targets:type_name -> knoway.route.v1alpha1.RouteTarget
	10, // 8: knoway.route.v1alpha1.Route.rate_limit_policy:type_name -> knoway.route.v1alpha1.RateLimitPolicy
	1,  // 9: knoway.route.v1alpha1.RateLimitAdvanceLimitObject.base_on:type_name -> knoway.route.v1alpha1.RateLimitBaseOn
	8,  // 10: knoway.route.v1alpha1.RateLimitAdvanceLimit.objects:type_name -> knoway.route.v1alpha1.RateLimitAdvanceLimitObject
	12, // 11: knoway.route.v1alpha1.RateLimitAdvanceLimit.duration:type_name -> google.protobuf.Duration
	1,  // 12: knoway.route.v1alpha1.RateLimitPolicy.base_on:type_name -> knoway.route.v1alpha1.RateLimitBaseOn
	12, // 13: knoway.route.v1alpha1.RateLimitPolicy.duration:type_name -> google.protobuf.Duration
	9,  // 14: knoway.route.v1alpha1.RateLimitPolicy.advance_limits:type_name -> knoway.route.v1alpha1.RateLimitAdvanceLimit
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_route_v1alpha1_route_proto_init() }
func file_route_v1alpha1_route_proto_init() {
	if File_route_v1alpha1_route_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_route_v1alpha1_route_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_v1alpha1_route_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_v1alpha1_route_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_v1alpha1_route_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_v1alpha1_route_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_v1alpha1_route_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_v1alpha1_route_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimitAdvanceLimitObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_v1alpha1_route_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimitAdvanceLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_v1alpha1_route_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimitPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_route_v1alpha1_route_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*StringMatch_Exact)(nil),
		(*StringMatch_Prefix)(nil),
	}
	file_route_v1alpha1_route_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_route_v1alpha1_route_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_route_v1alpha1_route_proto_goTypes,
		DependencyIndexes: file_route_v1alpha1_route_proto_depIdxs,
		EnumInfos:         file_route_v1alpha1_route_proto_enumTypes,
		MessageInfos:      file_route_v1alpha1_route_proto_msgTypes,
	}.Build()
	File_route_v1alpha1_route_proto = out.File
	file_route_v1alpha1_route_proto_rawDesc = nil
	file_route_v1alpha1_route_proto_goTypes = nil
	file_route_v1alpha1_route_proto_depIdxs = nil
}
